{
	"info": {
		"_postman_id": "cc083ba4-f1c6-431c-b27c-04d5be8a4804",
		"name": "HW2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "http://162.55.220.72:5005/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Test 2. Статус код 200\", function(){\r",
							"    pm.expect(pm.response.code).to.eql(200)\r",
							"})\r",
							"//3. Проверить, что в body приходит правильный string.\r",
							" pm.test(\"Test 3. Проверить, что в body приходит правильный string.\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							" })"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Test 2. Статус код 200\", function(){\r",
							"    pm.expect(pm.response.code).to.eql(200)\r",
							"})    \r",
							"//3. Спарсить response body в json.\r",
							"var jsonDataResponse = pm.response.json();\r",
							"\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"Test 4. name в ответе равно name s request (name вбить руками.)\", function(){\r",
							"    pm.expect(jsonDataResponse.name).to.eql(\"Nikolay\");\r",
							"})\r",
							"\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Test 5. age в ответе равно age s request (age вбить руками.)\", function(){\r",
							"    pm.expect(jsonDataResponse.age).to.eql(\"39\");\r",
							"})\r",
							"\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Test 6. salary в ответе равно salary s request (salary вбить руками.)\", function(){\r",
							"    pm.expect(jsonDataResponse.salary).to.eql(1000);\r",
							"})\r",
							"\r",
							"//7. Спарсить request.\r",
							"var jsonDataRequest = request.data;\r",
							"\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Test 8. name в ответе равно name s request (name забрать из request.)\", function(){\r",
							"pm.expect(jsonDataResponse.name).to.eql(jsonDataRequest.name)\r",
							"})\r",
							"\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Test 9. age в ответе равно age s request (age забрать из request.)\", function(){\r",
							"    pm.expect(jsonDataResponse.age).to.eql(jsonDataRequest.age)\r",
							"})\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Test 10. salary в ответе равно salary s request (salary забрать из request.)\", function(){\r",
							"    pm.expect(jsonDataResponse.salary).to.eql(+jsonDataRequest.salary)\r",
							"})\r",
							"\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"console.log(\"Task 11. Вывести в консоль параметр family из response.\")\r",
							"for (i in jsonDataResponse.family){\r",
							"    console.log(i)\r",
							"}\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Test 12. u_salary_1_5_year в ответе равно salary*4\", function(){\r",
							"    pm.expect(jsonDataResponse.family.u_salary_1_5_year).to.eql(jsonDataRequest.salary*4)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Nikolay",
							"type": "text"
						},
						{
							"key": "age",
							"value": "39",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Test 2. Статус код 200\", function(){\r",
							"    pm.expect(pm.response.code).to.eql(200)\r",
							"})  \r",
							"//3. Спарсить response body в json.\r",
							"var jsonDataResponse = pm.response.json();\r",
							"\r",
							"//4. Спарсить request.\r",
							"var jsonDataRequest = pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Test 5. name в ответе равно name s request\", function(){\r",
							"    pm.expect(jsonDataRequest.name).to.eql(jsonDataResponse.name)\r",
							"}) \r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Test 6. age в ответе равно age s request \", function(){\r",
							"    pm.expect(jsonDataRequest.age).to.eql(jsonDataResponse.age)\r",
							"})\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Test 7. salary в ответе равно salary s request\", function(){\r",
							"    pm.expect(+jsonDataRequest.salary).to.eql(jsonDataResponse.salary)\r",
							"})\r",
							"\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"console.log(\"Response.family = \", jsonDataResponse.family)\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Test 9. у параметра dog есть параметры name\", function(){    \r",
							"    pm.expect(jsonDataResponse.family.pets.dog).to.have.property('name');\r",
							"    pm.expect(jsonDataResponse.family.pets.dog).to.have.any.keys('name');\r",
							"})\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Test 10. что у параметра dog есть параметры age.\", function(){    \r",
							"    pm.expect(jsonDataResponse.family.pets.dog).to.have.property('age');\r",
							"    pm.expect(jsonDataResponse.family.pets.dog).to.have.any.keys('age');\r",
							"})\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Test 11. Проверить, что параметр name имеет значение Luky.\", function(){\r",
							"    pm.expect(jsonDataResponse.family.pets.dog.name).to.eql(\"Luky\")\r",
							"})\r",
							"\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Test 12. Проверить, что параметр age имеет значение 4.\", function(){\r",
							"    pm.expect(jsonDataResponse.family.pets.dog.age).to.eql(4)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Nikolay&age=39&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Nikolay"
						},
						{
							"key": "age",
							"value": "39"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Test 2. status code is 200\", function(){\r",
							"    pm.expect(pm.response.code).to.eql(200)\r",
							"})\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"var jsonDataResponse = JSON.parse(responseBody);\r",
							"\r",
							"//4. Спарсить request\r",
							"var jsonDataRequest = pm.request.url.query.toObject();\r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Test 5. name in the response is equal to name request\", function(){\r",
							"    pm.expect(jsonDataResponse.name).to.eql(jsonDataRequest.name);\r",
							"}) \r",
							"\r",
							"///6. Проверить, что age в ответе равно age из request (age забрать из request.)  \r",
							"pm.test(\"Test 6. age in the response is equal to age request\", function(){\r",
							"    pm.expect(jsonDataResponse.age).to.eql(parseInt(jsonDataRequest.age));\r",
							"})   \r",
							"\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"    console.log(\"Test 7. The salary parameter from request= \" + jsonDataRequest.salary);\r",
							"    \r",
							"//8. Вывести в консоль параметр salary из response.    \r",
							"    console.log(\"Test 8. The salary parameter from response = \",jsonDataResponse.salary);\r",
							"\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(\"Test 9. the 0th element of the salary parameter from response = \" + jsonDataResponse.salary[0])\r",
							"\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"Test 10. the 1th element of the salary parameter from response =\" + jsonDataResponse.salary[1])\r",
							"\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(\"Test 11. the 2th element of the salary parameter from response = \" + jsonDataResponse.salary[2])\r",
							"\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Test 12. The 0th element of the salary parameter is equal to salary from request\", function(){\r",
							"    pm.expect(+jsonDataResponse.salary[0]).to.eql(+jsonDataRequest.salary)\r",
							"})\r",
							"\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Test 13. The 1th element of the salary parameter is equal to salary from request\", function(){\r",
							"    pm.expect(+jsonDataResponse.salary[1]).to.eql(+jsonDataRequest.salary*2)\r",
							"})\r",
							"\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Test 14. The 2th element of the salary parameter is equal to salary from request\", function(){\r",
							"    pm.expect(+jsonDataResponse.salary[2]).to.eql(+jsonDataRequest.salary*3)\r",
							"})\r",
							"\r",
							"//15. Создать в окружении переменную name\r",
							"    pm.environment.set('name');\r",
							"//16. Создать в окружении переменную age   \r",
							"    pm.environment.set('age');\r",
							"//17. Создать в окружении переменную salary    \r",
							"    pm.environment.set('salary');\r",
							"    \r",
							"//18. Передать в окружение переменную name\r",
							"    pm.environment.set('name', jsonDataResponse.name);\r",
							"\r",
							"//19. Передать в окружение переменную age\r",
							"    pm.environment.set('age', jsonDataResponse.age);\r",
							"\r",
							"//20. Передать в окружение переменную salary    \r",
							"    pm.environment.set('salary', jsonDataResponse.salary[0]);\r",
							"    console.log(\"jsonDataResponse.salary[0] = \", jsonDataResponse.salary[0])\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"    for (var i = 0; i < 3; i++){        \r",
							"        console.log(\"Test 21. Salary index \" + i + \" = \" + jsonDataResponse.salary[i]);\r",
							"    };"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Nikolay&age=39&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Nikolay"
						},
						{
							"key": "age",
							"value": "39"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://162.55.220.72:5005/user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Вставить параметр salary из окружения в request\r",
							"var request1 = pm.environment.get('salary');\r",
							"\r",
							"//2. Вставить параметр age из окружения в age\r",
							"    age = pm.environment.get('age');\r",
							"\r",
							"//3. Вставить параметр name из окружения в name\r",
							"name = pm.environment.get('name');\r",
							"\r",
							"//4. Отправить запрос.\r",
							"//5. Статус код 200\r",
							"pm.test(\"status code is 200\", function(){\r",
							"    pm.expect(pm.response.code).to.eql(200)\r",
							"})\r",
							"\r",
							"//6. Спарсить response body в json.\r",
							"var jsonDataResponse = pm.response.json();\r",
							"\r",
							"//7. Спарсить request.  \r",
							"var jsonDataRequest = request.data; \r",
							"\r",
							"//8. Проверить, что json response имеет параметр start_qa_salary \r",
							"pm.test(\"Test 8. json response имеет параметр start_qa_salary\", function(){\r",
							"    pm.expect(jsonDataResponse).to.have.property(\"start_qa_salary\");\r",
							"})\r",
							"\r",
							"//9. Проверить, что json response имеет параметр qa_salary_after_6_months \r",
							"pm.test(\"Test 9. что json response имеет параметр qa_salary_after_6_months\", function(){\r",
							"    pm.expect(jsonDataResponse).to.have.property('qa_salary_after_6_months');  \r",
							"})\r",
							"\r",
							"//10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Test 10. что json response имеет параметр qa_salary_after_12_months\", function(){\r",
							"    pm.expect(jsonDataResponse).to.have.property(\"qa_salary_after_12_months\");\r",
							"})\r",
							"\r",
							" //11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							" pm.test(\"Test 11. json response имеет параметр qa_salary_after_1.5_year\", function(){\r",
							"     pm.expect(jsonDataResponse).to.have.property(\"qa_salary_after_1.5_year\")\r",
							" }) \r",
							"\r",
							" //12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							" pm.test(\"Test 12. json response имеет параметр qa_salary_after_3.5_years\", function(){\r",
							"     pm.expect(jsonDataResponse).to.have.property(\"qa_salary_after_3.5_years\")\r",
							" }) \r",
							"\r",
							" //13. Проверить, что json response имеет параметр person\r",
							" pm.test(\"Test 13. что json response имеет параметр person\", function(){\r",
							"     pm.expect(jsonDataResponse).to.have.property(\"person\")\r",
							" })\r",
							"\r",
							" //14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)  \r",
							" pm.test(\"Test 14. параметр start_qa_salary равен salary из request\", function(){\r",
							"     pm.expect(jsonDataResponse.start_qa_salary).to.eql(+jsonDataRequest.salary)\r",
							" })\r",
							"\r",
							" \r",
							" //15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							" pm.test(\"Test 15. параметр qa_salary_after_6_months равен salary*2 из request\", function(){\r",
							"     pm.expect(jsonDataResponse.qa_salary_after_6_months).to.eql(jsonDataRequest.salary*2)\r",
							" })\r",
							" \r",
							" //16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							" pm.test(\"Test 16. параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\", function(){\r",
							"     pm.expect(jsonDataResponse.qa_salary_after_12_months).to.eql(jsonDataRequest.salary*2.7)\r",
							" })\r",
							" //17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							" pm.test(\"Test 17. параметр qa_salary_after_1.5_year равен salary*3.3\", function(){\r",
							"     pm.expect(jsonDataResponse[\"qa_salary_after_1.5_year\"]).to.eql(jsonDataRequest.salary*3.3)\r",
							" })\r",
							"\r",
							" // 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							" pm.test(\"Test 18. параметр qa_salary_after_3.5_years равен salary*3.8\", function(){\r",
							"     pm.expect(jsonDataResponse[\"qa_salary_after_3.5_years\"]).to.eql(jsonDataRequest.salary*3.8)\r",
							" })\r",
							"\r",
							"//19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Test 19. параметре person, 1-й элемент из u_name равен salary из request\", function(){\r",
							"    pm.expect(jsonDataResponse.person.u_name[1]).to.eql(+jsonDataRequest.salary)\r",
							"})\r",
							"//20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"Test 20. параметр u_age равен age из request\", function(){\r",
							"    pm.expect(jsonDataResponse.person.u_age).to.eql(+jsonDataRequest.age)\r",
							"})\r",
							"\r",
							"//21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"Test 21. u_salary_5_years равен salary*4.2 из request\", function(){\r",
							"     pm.expect(jsonDataResponse.person.u_salary_5_years).to.eql(jsonDataRequest.salary*4.2)\r",
							" })\r",
							"\r",
							"//22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"console.log(\"Task 22. Написать цикл который выведет в консоль по порядку элементы списка из параметра person \")\r",
							"for (var i in jsonDataResponse.person){\r",
							"    console.log(i, jsonDataResponse.person[i])\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}